suite: deployment test

templates:
  - deployment.yaml

tests:
  - it: creates a deployment type
    asserts:
      - isKind:
          of: Deployment

  - it: sets the image tag correctly
    set:
      image:
        repository: bongo/bongo
        tag: latest
    asserts:
      - equal:
          path: .spec.template.spec.containers[0].image
          value: bongo/bongo:latest

  - it: sets the image pull policy correctly
    set:
      image:
        pullPolicy: Always
    asserts:
      - equal:
          path: .spec.template.spec.containers[0].imagePullPolicy
          value: Always

  - it: sets replicas correctly
    set:
      replicaCount: 5
    asserts:
      - equal:
          path: .spec.replicas
          value: 5

  - it: sets deployment strategy
    set:
      deploymentStrategy:
        type: Recreate
    asserts:
      - equal:
          path: .spec.strategy.type
          value: Recreate

  - it: uses the fullnameOverride
    set:
      fullnameOverride: bongo
    asserts:
      - equal:
          path: .metadata.name
          value: bongo

  - it: adds extra pod annotations
    set:
      podAnnotations:
        bongo: bingo
    asserts:
      - equal:
          path: .spec.template.metadata.annotations.bongo
          value: bingo
    
  - it: doesn't add the volumes key when pvc.enabled == false and no extra volumes configured
    set:
      pvc.enabled: false
    asserts:
      - notExists:
          path: .spec.template.spec.volumes
      - notExists:
          path: .spec.template.spec.containers[0].volumeMounts
    
  - it: adds the volumes key when pvc.enabled == true
    set:
      pvc.enabled: true
    asserts:
      - exists:
          path: .spec.template.spec.volumes
      - exists:
          path: .spec.template.spec.containers[0].volumeMounts
    
  - it: adds the volumes key when extra volumes are configured
    set:
      pvc.enabled: false
      volumes:
        - name: bongo
          hostPath:
            path: /bongo
    asserts:
      - exists:
          path: .spec.template.spec.volumes
    
  - it: adds the volumeMounts key when extra volume mounts are configured
    set:
      pvc.enabled: false
      volumeMounts:
        - mountPath: /bongo
          name: bongo
    asserts:
      - exists:
          path: .spec.template.spec.containers[0].volumeMounts
    
  - it: adds empty resources by default
    asserts:
      - isEmpty:
          path: .spec.template.spec.containers[0].resources
          
  - it: adds resources when configured
    set:
      resources:
        limits:
          cpu: 100m
    asserts:
      - isNotEmpty:
          path: .spec.template.spec.containers[0].resources
      - equal:
          path: .spec.template.spec.containers[0].resources.limits.cpu
          value: 100m

  - it: adds the configmap to the envFrom
    set:
      fullnameOverride: bongo
    asserts:
      - contains:
          path: .spec.template.spec.containers[0].envFrom
          content:
            configMapRef:
              name: bongo